@startuml

actor user
participant customerApi
participant controller
participant service
participant typeormRepository
participant httpclient
participant productApi
database datastore

user -> customerApi: User hit OrderHistoryApi
customerApi -> controller : Recives request at customer controller get all orderApi
controller -> service :  UserOrderHistory(userId)
service -> typeormRepository : UserOrderHistory(UserId)
typeormRepository -> datastore : check in db --> found data
datastore -> typeormRepository : data return to repositor
typeormRepository -> service : resonse send to service
service -> controller : response recived at conroller
controller -> customerApi : added status code 200
customerApi -> user : Response recieved

user -> customerApi: User hit Addtocart
customerApi -> controller : Recives request at customer controller Addtocart
controller -> service :  AddTocart(productDetails)
service -> httpclient :  Service Invoke Httpclient
httpclient -> productApi : httpclient make post request with product api
productApi -> httpclient:  Updates Inventory. Make intry in cart table. \n Send response with status 201
httpclient -> service: resonse service at httpclient
service -> controller : response recived at conroller
controller -> customerApi : added status code 201
customerApi -> user : Response recieved 



user -> customerApi: User hit Check out
customerApi -> controller : Recives request at customer controller Checkout
controller -> service :  Chekout(userid)
service -> httpclient :  Service Invoke Httpclient
httpclient -> productApi : httpclient make post request with product api
productApi -> httpclient:  Insert records in Orders and OrderInfromation tables. \n Response received with status 200 with Invoice
httpclient -> service: resonse service at httpclient
service -> controller : response recived at conroller
controller -> customerApi : added status code 200
customerApi -> user : Response recieved 


@enduml